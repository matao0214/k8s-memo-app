steps:
  # サービスの外部IPを取得し、環境変数に設定
  - name: 'gcr.io/cloud-builders/kubectl'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        API_URL=$$(kubectl get service api -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
        echo "NEXT_PUBLIC_API_URL=http://$$API_URL:3000" >> $$HOME/.env

  # Docker Build
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build',
           '-t', 'asia-northeast1-docker.pkg.dev/${PROJECT_ID}/docker/memo-app-frontend:latest', 
           '--build-arg', 'NEXT_PUBLIC_API_URL=$${NEXT_PUBLIC_API_URL}',
           '-f', 'frontend/Dockerfile.prod',
           'frontend']

  # Docker Push
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 
           'asia-northeast1-docker.pkg.dev/${PROJECT_ID}/docker/memo-app-frontend:latest']

  # GKEクラスタの認証情報を取得
  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['container', 'clusters', 'get-credentials', '${_CLOUDSDK_CONTAINER_CLUSTER}', '--region', '${_CLOUDSDK_COMPUTE_REGION}', '--project', '${PROJECT_ID}']

  # Deploy to GKE
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'k8s/deployment/frontend.yaml']

substitutions:
  _CLOUDSDK_COMPUTE_REGION: asia-northeast1
  _CLOUDSDK_CONTAINER_CLUSTER: example-autopilot-cluster

options:
  logging: CLOUD_LOGGING_ONLY
  env:
    - "CLOUDSDK_COMPUTE_REGION=${_CLOUDSDK_COMPUTE_REGION}"
    - "CLOUDSDK_CONTAINER_CLUSTER=${_CLOUDSDK_CONTAINER_CLUSTER}"
    - "NEXT_PUBLIC_API_URL=$(grep NEXT_PUBLIC_API_URL $$HOME/.env | cut -d '=' -f2)"

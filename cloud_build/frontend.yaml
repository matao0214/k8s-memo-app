steps:
  # GKEクラスタの認証情報を取得
  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['container', 'clusters', 'get-credentials', '${_CLOUDSDK_CONTAINER_CLUSTER}', '--region', '${_CLOUDSDK_COMPUTE_REGION}', '--project', '${PROJECT_ID}']

  # サービスの外部IPを取得
  - name: 'gcr.io/cloud-builders/kubectl'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        API_URL=$$(kubectl get service api -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
        echo "http://$$API_URL:3000" > /workspace/api-url.txt
        echo "API_URL: $$(cat /workspace/api-url.txt)"

  # Docker Build
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        NEXT_PUBLIC_API_URL=$$(cat /workspace/api-url.txt)
        docker build \
          -t asia-northeast1-docker.pkg.dev/${PROJECT_ID}/docker/memo-app-frontend:${SHORT_SHA} \
          --build-arg NEXT_PUBLIC_API_URL=$$NEXT_PUBLIC_API_URL \
          -f frontend/Dockerfile.prod \
          frontend

  # Docker Push
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 
           'asia-northeast1-docker.pkg.dev/${PROJECT_ID}/docker/memo-app-frontend:${SHORT_SHA}']

  # Update image tag
  - name: 'alpine'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        sed -i "s|image: asia-northeast1-docker.pkg.dev/.*/memo-app-frontend:.*|image: asia-northeast1-docker.pkg.dev/${PROJECT_ID}/docker/memo-app-frontend:${SHORT_SHA}|" k8s/deployment/frontend.yaml

  # Git commit & push
  - name: 'gcr.io/cloud-builders/git'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        git config --global user.email "cloudbuild@example.com"
        git config --global user.name "cloudbuild"
        git checkout main 2>/dev/null || git checkout -b main
        git add k8s/deployment/frontend.yaml
        git commit -m "Update frontend image tag to ${SHORT_SHA} [ci skip]" || echo "No changes to commit"
        git remote set-url origin https://$_GITHUB_USER:$$GITHUB_TOKEN@github.com/matao0214/k8s-memo-app.git
        git push origin main --force
    secretEnv:
      - 'GITHUB_TOKEN'

availableSecrets:
  secretManager:
    - versionName: projects/${PROJECT_NUMBER}/secrets/github-token-secret/versions/1
      env: 'GITHUB_TOKEN'

substitutions:
  _CLOUDSDK_COMPUTE_REGION: asia-northeast1
  _CLOUDSDK_CONTAINER_CLUSTER: example-autopilot-cluster
  _GITHUB_USER: 'matao0214'

options:
  logging: CLOUD_LOGGING_ONLY
  env:
    - "CLOUDSDK_COMPUTE_REGION=${_CLOUDSDK_COMPUTE_REGION}"
    - "CLOUDSDK_CONTAINER_CLUSTER=${_CLOUDSDK_CONTAINER_CLUSTER}"

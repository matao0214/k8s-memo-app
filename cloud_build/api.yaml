steps:
  # Docker Build
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build',
           '-t', 'asia-northeast1-docker.pkg.dev/${PROJECT_ID}/docker/memo-app-api:latest', 
           '-f', 'api/Dockerfile.prod',
           'api']
  # Docker Push
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 
           'asia-northeast1-docker.pkg.dev/${PROJECT_ID}/docker/memo-app-api:latest']
  # GKEクラスタの認証情報を取得
  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['container', 'clusters', 'get-credentials', '#{_CLOUDSDK_CONTAINER_CLUSTER}', '--region', '${_CLOUDSDK_COMPUTE_REGION}', '--project', '${PROJECT_ID}']
  # Deploy to GKE
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'k8s/deployment/api.yaml']
  # DB Create & Migrate
  - name: 'gcr.io/cloud-builders/kubectl'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        POD_NAME=""
        while [ -z "$POD_NAME" ]; do
          POD_NAME=$(kubectl get pods -l app=api -o jsonpath="{.items[0].metadata.name}" --field-selector=status.phase=Running)
          echo "Waiting for Pod to be ready..."
          sleep 5
        done
        kubectl exec -it $POD_NAME -- rails db:create db:migrate RAILS_ENV=production
substitutions:
  _CLOUDSDK_COMPUTE_REGION: asia-northeast1
  _CLOUDSDK_CONTAINER_CLUSTER: example-autopilot-cluster
options:
  logging: CLOUD_LOGGING_ONLY
  env:
    - "CLOUDSDK_COMPUTE_REGION=${_CLOUDSDK_COMPUTE_REGION}"
    - "CLOUDSDK_CONTAINER_CLUSTER=${_CLOUDSDK_CONTAINER_CLUSTER}"

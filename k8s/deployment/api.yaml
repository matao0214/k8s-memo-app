apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
      # デプロイの度に値が更新されpodが作り直されるようにする
      annotations:
        redeployTimestamp: "$(date)"
    spec:
      serviceAccountName: cloud-sql-proxy
      containers:
      - name: api
        image: asia-northeast1-docker.pkg.dev/matao0214-demo/docker/memo-app-api:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
        env:
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: api-secret
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: api-secret
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: api-secret
              key: POSTGRES_PASSWORD
        - name: POSTGRES_HOST
          valueFrom:
            secretKeyRef:
              name: api-secret
              key: POSTGRES_HOST
        # rails認証用のキーを指定
        - name: SECRET_KEY_BASE
          valueFrom:
            secretKeyRef:
              name: api-secret
              key: SECRET_KEY_BASE
        # フロントエンドのURLを指定。port=80の場合はportの記載省力する。
        - name: CORS_ALLOWED_ORIGINS
          value: "http://34.84.160.2"
        resources:
          requests:
            cpu: "250m"
            memory: "1Gi"
          limits:
            cpu: "500m"
            memory: "2Gi"
      # Cloud SQLへの接続を行うためのサイドカー
      - name: cloud-sql-proxy
        # It is recommended to use the latest version of the Cloud SQL Auth Proxy
        # Make sure to update on a regular schedule!
        image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.11.4
        env:
          - name: INSTANCE_CONNECTION_NAME
            valueFrom:
              secretKeyRef:
                name: api-secret
                key: INSTANCE_CONNECTION_NAME
        command: ["/bin/sh"]
        args:
          - "-c"
          - |
            /cloud_sql_proxy "${INSTANCE_CONNECTION_NAME}" --structured-logs --port=5432
        securityContext:
          # The default Cloud SQL Auth Proxy image runs as the
          # "nonroot" user and group (uid: 65532) by default.
          runAsNonRoot: true
        # You should use resource requests/limits as a best practice to prevent
        # pods from consuming too many resources and affecting the execution of
        # other pods. You should adjust the following values based on what your
        # application needs. For details, see
        # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          requests:
            # The proxy's memory use scales linearly with the number of active
            # connections. Fewer open connections will use less memory. Adjust
            # this value based on your application's requirements.
            memory: "1Gi"
            # The proxy's CPU use scales linearly with the amount of IO between
            # the database and the application. Adjust this value based on your
            # application's requirements.
            cpu:    "250m"
          limits:
            # Set memory limit to prevent the container from using too much memory
            memory: "2Gi"
            # Set CPU limit to prevent the container from using too much CPU
            cpu:    "500m"
